@page "/Agregar"
@inject HttpClient http
@inject IJSRuntime js

<div class="card" style="width: 70%; margin-left:15%">
    <nav class="navbar navbar-light bg-light">
        <div class="container-fluid">
            <a class="navbar-brand">Cedula</a>
            <div class="d-flex">
                <input @bind-value="cedula" class="form-control me-2" type="search" placeholder="" aria-label="Search">
                <button @onclick="getdatos" class="btn btn-outline-success">
                    <i class="oi oi-magnifying-glass" aria-hidden="true"></i>
                </button>
            </div>
        </div>
    </nav>
    <div class="card-body">
        <br />
        <form>
            <div class="form-row">
                <div class="col">
                    <label for="formGroupExampleInput">Nombre</label>
                    <input value="@nombre" type="text" class="form-control" placeholder="Nombre">
                </div>
                <div class="col">
                    <label for="formGroupExampleInput">Apellido</label>
                    <input value="@apellido" type="text" class="form-control" placeholder="Apellido">
                </div>
                <div class="col">
                    <label for="formGroupExampleInput">Fecha Nacimiento</label>
                    <input class="form-control" type="date" value="@fecha" id="example-date-input">
                </div>

            </div>
        </form>
        <br />
        <form>
            <div class="form-row">
                <div class="col">
                    <label for="formGroupExampleInput">Latitud</label>
                    <input @bind-value="@latitud" type="text" class="form-control" placeholder="Latitud">
                </div>
                <div class="col">
                    <label for="formGroupExampleInput">Longitud</label>
                    <input @bind-value="@longitud" type="text" class="form-control" placeholder="Longitud">
                </div>
                <div class="col">
                    <label for="formGroupExampleInput">Provincia</label>
                    <select @bind="provincia" id="Provincia" name="Provincia" class="form-control">
                        <option value="">Seleccione...</option>
                        @if (LS_P != null)
                        {
                            @foreach (var item in LS_P)
                            {
                                <option value="@item.NOMBRE">@item.NOMBRE</option>
                            }
                        }
                    </select>

                </div>

            </div>
            <br />
            <div class="form-row">
                <div class="col">
                    <label for="exampleFormControlTextarea1">Descripcion del Robo</label>
                    <textarea @bind="@desc_robo" class="form-control" id="exampleFormControlTextarea1" rows="3"></textarea>
                </div>
                <div class="col">
                    <label for="formGroupExampleInput">Valor</label>
                    <input @bind-value="@valor" type="text" class="form-control" placeholder="Longitud">
                </div>
            </div>
        </form>
    </div>
    <div class="card-footer">
        <button @onclick="NewAgregar" style="width:100%" class="btn btn-primary" type="button">Agregar</button>
    </div>
</div>

@code {

    string cedula = "";
    string nombre = "";
    string apellido = "";
    string fecha = "";
    string latitud = "";
    string longitud = "";
    string desc_robo = "";
    string valor = "";

    private async Task getdatos()
    {
        var url = $"https://api.adamix.net/apec/cedula/{cedula}";
        var data = await http.GetJsonAsync<CEDULA>(url);
        nombre = data.Nombres;
        apellido = data.Apellido1;
        fecha = Convert.ToDateTime(data.FechaNacimiento).ToString("yyy-MM-dd");
    }

    List<provincia> LS_P = null;
    string provincia = "";
    protected override async Task OnInitializedAsync()
    {
        var url = "https://api-robov1.herokuapp.com/api/Provinvias";
        var datos = await  http.GetJsonAsync<List<provincia>>(url);
        LS_P = datos;
    }

    private async Task NewAgregar()
    {
        try
        {
            var url = $"https://api-robov1.herokuapp.com/api/Registrar_R/{cedula}/{desc_robo}/{valor}/{provincia}/{latitud}/{longitud}";
            var datos = await http.GetJsonAsync<MENSAJE>(url);

            await js.InvokeAsync<object>("msjAlert", "Registrado Correctamente", "success");
        }
        catch (Exception e)
        {
            await js.InvokeAsync<object>("msjAlert", "Error al Registrar", "error");
        }


    }

}
